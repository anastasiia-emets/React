{"version":3,"sources":["components/Header/Header.jsx","components/Footer/Footer.jsx","components/UserRow/UserRow.jsx","components/TableHeaderCell/TableHeaderCell.jsx","components/TableUSers/TableUsers.jsx","AppBackend.js","components/AddButton/AddButton.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","props","onSelectChange","limit","onSearchChange","react_default","a","createElement","className","Row","Col","md","Form","Control","as","onChange","event","target","value","defaultValue","Group","controlId","type","placeholder","Footer","onPageChange","page","Button","variant","onClick","UserRow","_React$Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleMode","setState","isEditMode","state","submit","onSave","name","email","description","inherits","createClass","key","_this$props","id","deleteUser","createdAt","React","Component","TableHeaderCell","order","title","arrowUpClassName","classNames","table-header-cell__arrow_active","arrowDownClassName","sortBy","require","TableUsers","apply","arguments","Table","striped","bordered","hover","TableHeaderCell_TableHeaderCell_TableHeaderCell","users","c","map","user","index","UserRow_UserRow_UserRow","assign","AppBackend","baseUrl","_ref","_ref$limit","_ref$page","_ref$search","search","fetch","concat","then","response","json","method","headers","Accept","Content-Type","body","JSON","stringify","console","log","Add","_Component","onInputChange","_event$target","defineProperty","isVisible","onCancel","Modal_default","show","onHide","closeButton","Title","Body","Button_default","App","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","updateUsers","stop","_x","_ref2","_callee2","_context2","_x2","_ref3","_callee3","_context3","abrupt","length","_x3","_ref4","_callee4","_context4","backend","delete","sent","_x4","_callee5","_this$state","_context5","isLoading","get","sortUsers","_ref6","_callee6","_context6","update","_x5","onAddUserSave","closeAddUserModal","create","addUserModalVisible","onUpdateButton","_this2","Header_Header_Header","AddButton_Add","TableUsers_TableUsers","Footer_Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1746c45a.chunk.js","sourcesContent":["import React from \"react\";\nimport { Form } from 'react-bootstrap'\nimport { Col, Row } from \"react-bootstrap\";\nimport './Header.css'\n\nexport const Header = (props) => {\n    const { onSelectChange, limit, onSearchChange } = props;\n    return (\n        <header className=\"header\">\n            <div className=\"header__container\">\n                <div className=\"header__select\">\n                    <Row>\n                        <Col md={4}>\n                            <Form.Control as=\"select\"\n                                onChange={(event) => onSelectChange(event.target.value)}\n                                defaultValue={limit} >\n                                <option>5</option>\n                                <option>10</option>\n                                <option>15</option>\n                            </Form.Control>\n                        </Col>\n\n                    </Row>\n                </div>\n                <div className=\"header__input\">\n                    <Form.Group controlId=\"exampleForm.ControlInput1\">\n                        <Form.Control type=\"email\" placeholder=\"Search\"\n                            onChange={(event) => onSearchChange(event.target.value)} >\n                        </Form.Control>\n                    </Form.Group>\n                </div>\n\n            </div>\n\n        </header>\n    )\n}","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\n\r\nimport './Footer.css';\r\n\r\nexport const Footer = (props) => {\r\n  const { onPageChange, page } = props;\r\n  return (\r\n    <footer className=\"footer\">\r\n      <div className=\"footer__button\">\r\n        <Button className=\"footer__button-prev\" variant=\"secondary\" onClick={(event) => onPageChange(page - 1)}>Privious</Button>\r\n        <Button className=\"footer__button-next\"  variant=\"warning\" onClick={(event) => onPageChange(page + 1)}>Next</Button>\r\n      </div>\r\n  \r\n    </footer>\r\n\r\n  )\r\n};","import React from 'react';\nimport { Button } from \"react-bootstrap\";\nimport './UserRow.css'\n\nexport class UserRow extends React.Component {\n   \n    constructor(props) {\n        super(props);\n        this.state = {\n            isEditMode: false\n        };\n    }\n\n    toggleMode = () => {\n        this.setState({\n            isEditMode: !this.state.isEditMode\n        });\n    };\n\n    \n     submit = () => {\n         this.toggleMode();\n\n         this.props.onSave({\n             name: this.state.name,\n             email: this.state.email,\n             description: this.state.description\n         });\n       \n     }\n\n\n\n    render() {\n        const { id, name, email, description, deleteUser, createdAt} = this.props;\n        const { isEditMode } = this.state;\n\n        return (\n            <tr className=\"user-row\">\n                <td className=\"user-row__id\">{id}</td>\n                <td className=\"user-row__name\">{isEditMode ? <input type=\"text\" value={this.state.name} /> : name}</td>\n                <td className=\"user-row__email\">{isEditMode ? <input type=\"text\" value={this.state.email} /> : email}</td>\n                <td className=\"user-row__descr\">{isEditMode ? <input type=\"text\" value={this.state.description}  /> : description}</td>\n                <td className=\"user-row__create\">{createdAt}</td>\n\n                <td className=\"user-row__button\">\n                    {isEditMode ? (\n                        <Button variant=\"success\" onClick={this.submit}>Save</Button>) : (\n                            <Button variant=\"light\" onClick={this.toggleMode} >Update</Button>\n                        )\n                    }\n                        <Button className=\"user-row__button-delete\" variant=\"danger\" onClick={(event) => deleteUser(id)}>Delete</Button>\n                </td>\n               \n            </tr>\n        );\n    }\n}\n\n\n\n","import React from 'react';\nimport './TableHeaderCell.css'\nimport * as classNames from 'classnames';\n\nexport const TableHeaderCell = (props) => {\n\n   \n\n    const { order, title } = props;\n    let arrowUpClassName = classNames(\n        'fa',\n        'fa-sort-up',\n        'table-header-cell__arrow',\n        {\n            'table-header-cell__arrow_active': order === 'asc'\n        });\n\n    let arrowDownClassName = classNames('fas fa-sort-down table-header-cell__arrow', {\n        'table-header-cell__arrow_active': order === 'desc'\n    });\n\n\n\n\n    return (\n        <td>\n            <div className=\"table-header-cell\">\n                <span className=\"table-header-cell__title\">{title}</span>\n                <div className=\"table-header-cell__arows\">\n                    <i className={arrowUpClassName} />\n                    <i className={arrowDownClassName} />\n                </div>\n            </div>\n        </td>\n\n    );\n  \n\n};","import React from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport { UserRow } from \"../UserRow/UserRow\";\nimport './TableUser.css'\nimport { TableHeaderCell } from \"../TableHeaderCell/TableHeaderCell\";\nconst sortBy = require('lodash/sortBy');\n\n\nexport class TableUsers extends React.Component {\n    render() {\n        const { deleteUser, onSave} = this.props;\n\n        return (\n            <div className=\"tableUsers\">\n                <Table striped bordered hover className=\"tableUsers__table\">\n                    <thead>\n                        <tr>\n                            <TableHeaderCell title=\"#\" order=\"desc\" />\n                            <TableHeaderCell title=\"Name\" order=\"asc\" />\n                            <TableHeaderCell title=\"Email\" order=\"asc\" />\n                            <TableHeaderCell title=\"Description\" order=\"asc\" />\n                            <TableHeaderCell title=\"Created\" />\n                            <td> Actions </td>   \n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            sortBy(this.props.users, c => c.email).map((user, index) => {\n                                return <UserRow {...user}\n                                    key={user.id} deleteUser={deleteUser} onSave={onSave}  />\n                            })\n                        }\n                    </tbody>\n                </Table>\n            </div>\n        )\n    }\n\n}\n\n\n","export class AppBackend {\r\n\tconstructor() {\r\n    this.baseUrl =  'https://5bf417c491c25b0013a3b9a2.mockapi.io';\r\n  }\r\n\r\n\tget({limit=5, page=1, search=\"\" }) {\r\n    return fetch(`${this.baseUrl}/users?limit=${limit}&page=${page}&search=${search}`)\r\n      .then((response) => response.json());\r\n\t}\r\n\r\n\tcreate(user) {\r\n\t\treturn fetch(`${this.baseUrl}/users`, {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'Accept': 'application/json',\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify(user)\r\n\t\t});\r\n\t}\r\n\tdelete(id) {\r\n\t\tconsole.log(id);\r\n\t\treturn fetch(`${this.baseUrl}/users/${id}`, {\r\n\t\t\tmethod: 'delete',\r\n\t\t\theaders: {\r\n\t\t\t\t'Accept': 'application/json',\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\r\n\tupdate(user) {\r\n\t\tconsole.log(user);\r\n\t\treturn fetch(`${this.baseUrl}/users/${user.id}`, {\r\n\t\t\t\tmethod: 'PUT',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\t'Accept': 'application/json',\r\n\t\t\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify(user)\r\n\t\t});\r\n}\r\n}\r\n\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { Form } from 'react-bootstrap'\r\nimport './AddButton.css'\r\nexport class Add extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: '',\r\n      email: ''\r\n    };\r\n  }\r\n  submit = () => {\r\n    this.props.onSave({\r\n      name: this.state.name,\r\n      email: this.state.email,\r\n      description: this.state.description\r\n    });\r\n  }\r\n\r\n  onInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState(\r\n      {\r\n        [name]: value\r\n      }\r\n    );\r\n  }\r\n  render() {\r\n\r\n    const { isVisible, onCancel } = this.props;\r\n\r\n    return (\r\n      <div className=\"add\">\r\n        <div className=\"add__button\">\r\n\r\n\r\n          <Modal show={isVisible} onHide={onCancel}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Add information about user</Modal.Title>\r\n            </Modal.Header>\r\n\r\n            <Modal.Body>\r\n              <Form >\r\n                <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                  <Form.Control type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    value={this.state.name}\r\n                    onChange={this.onInputChange}>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                  <Form.Control type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.onInputChange}>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                  <Form.Control type=\"text\"\r\n                    placeholder=\"Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onInputChange}>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n              </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"danger\" onClick={onCancel}>\r\n                Close\r\n              </Button>\r\n              <Button variant=\"success\" onClick={this.submit}>\r\n                Save User\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Header } from \"./components/Header/Header\";\nimport { Footer } from \"./components/Footer/Footer\";\nimport { TableUsers } from \"./components/TableUSers/TableUsers\";\nimport { AppBackend } from \"./AppBackend\"\nimport { Add } from \"./components/AddButton/AddButton\";\nimport Button from 'react-bootstrap/Button'\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            users: [],\n            limit: 15,\n            search: '',\n            page: 1,\n            isLoading: false\n        };\n        this.backend = new AppBackend();\n    }\n    componentDidMount() {\n        this.updateUsers();\n    }\n    onSelectChange = async (limit) => {\n        this.setState({ limit }, () => {\n            this.updateUsers();\n        });\n    };\n\n    onSearchChange = async (search) => {\n\n        this.setState({ search }, () => {\n            this.updateUsers();\n        });\n\n    };\n    onPageChange = async (page) => {\n        if (page === 0) return;\n        if (this.state.users.length < this.state.limit) return;\n        this.setState({ page }, () => {\n            this.updateUsers();\n        });\n\n    }\n\n    deleteUser = async (id) => {\n        const users = await this.backend.delete(id);\n        this.setState({\n            users\n        });\n        this.updateUsers();\n\n    };\n\n\n    updateUsers = async () => {\n        this.setState({\n            isLoading: true\n        })\n        const { limit, search, page } = this.state;\n        const users = await this.backend.get({\n            limit,\n            search,\n            page\n\n        });\n        this.setState({\n            users,\n            isLoading: false\n        });\n    };\n\n    sortUsers = async (user) => {\n\n        const users = await this.backend.update(\n            user\n        );\n        this.setState({\n            users\n        });\n\n    };\n    onAddUserSave = (user) => {\n        this.closeAddUserModal();\n        this.backend.create(user);\n    }\n    closeAddUserModal = () => {\n        this.setState({ addUserModalVisible: false });\n    };\n\n\n\n    onUpdateButton = (user) => {\n        this.backend.update(user);\n        //   this.updateUsers();\n    }\n\n    render() {\n\n        return (\n            <div className=\"wrapp\">\n                <Header\n                    onSelectChange={this.onSelectChange}\n                    limit={this.state.limit}\n                    onSearchChange={this.onSearchChange} />\n                <Button variant=\"primary\" className=\"add-button\"\n                    onClick={() => this.setState({ addUserModalVisible: true })}>\n                    Add User\n                </Button>\n                <Add\n                    onSave={this.onAddUserSave}\n                    onCancel={this.closeAddUserModal}\n                    isVisible={this.state.addUserModalVisible} />\n\n\n                {\n                    this.state.isLoading\n                        ? (\n                            <div className=\"loader\" />\n                        )\n                        : (\n                            <TableUsers\n                                users={this.state.users}\n                                deleteUser={this.deleteUser}\n                                id={this.state.id}\n                                onSave={this.onUpdateButton}\n                                isEditMode={this.state.isEditMode} />\n\n                        )\n                }\n\n                <Footer\n                    onPageChange={this.onPageChange}\n                    page={this.state.page} />\n\n\n\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}